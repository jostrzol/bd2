-- Generated by Oracle SQL Developer Data Modeler 21.2.0.165.1515
--   at:        2022-05-26 21:31:37 CEST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c


DROP TABLE odpowiedzi CASCADE CONSTRAINTS;
DROP TABLE ankiety CASCADE CONSTRAINTS;
DROP TABLE pytania CASCADE CONSTRAINTS;
DROP TABLE typy_ankiet CASCADE CONSTRAINTS;
DROP TABLE osoby CASCADE CONSTRAINTS;


CREATE USER bd2c070_app IDENTIFIED BY ACCOUNT UNLOCK ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ankiety (
    id_ankiety       NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    kod_typu_ankiety VARCHAR2(8 CHAR) NOT NULL,
    id_agenta        NUMBER(5) NOT NULL,
    data_wypelnienia DATE NOT NULL,
    id_klienta       NUMBER(5),
    uwagi            VARCHAR2(1000 CHAR)
)
LOGGING;

COMMENT ON TABLE ankiety IS
    'Ankieta to zestaw odpowiedzi na pytania definiowane przez jej typ. Ankieta zawsze ocenia jakiegoś agenta i może być wypełniona jawnie przez jakiegoś klienta lub anonimowo.';

CREATE INDEX ank_tank_idx ON
    ankiety (
        kod_typu_ankiety
    ASC )
        LOGGING;

CREATE INDEX ank_agt_idx ON
    ankiety (
        id_agenta
    ASC )
        LOGGING;

CREATE INDEX ank_kli_idx ON
    ankiety (
        id_klienta
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON ankiety TO bd2c070_app;

ALTER TABLE ankiety ADD CONSTRAINT ank_pk PRIMARY KEY ( id_ankiety );

CREATE TABLE odpowiedzi (
    kod_typu_ankiety VARCHAR2(8 CHAR) NOT NULL,
    nr_pytania       NUMBER(3) NOT NULL,
    id_ankiety       NUMBER(5) NOT NULL,
    ocena            NUMBER(3)
)
LOGGING;

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_ocena_chk CHECK ( ocena IN ( 0, 50, 100 ) );

COMMENT ON TABLE odpowiedzi IS
    'Odpowiedź udzielona przez klienta na konkretne pytanie w danej ankiecie.';

COMMENT ON COLUMN odpowiedzi.ocena IS
    'Przyjmuje wartości 0, 50 i 100.';

CREATE INDEX odp_ank_idx ON
    odpowiedzi (
        id_ankiety
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON odpowiedzi TO bd2c070_app;

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_pk PRIMARY KEY ( kod_typu_ankiety,
                                        nr_pytania,
                                        id_ankiety );

CREATE TABLE osoby (
    id_osoby                 NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    email                    VARCHAR2(40 CHAR) NOT NULL,
    nazwisko                 VARCHAR2(30 CHAR) NOT NULL,
    imie                     VARCHAR2(20 CHAR) NOT NULL,
    imie_2                   VARCHAR2(20 CHAR),
    pesel                    CHAR(11 BYTE),
    telefon                  VARCHAR2(15 CHAR),
    nr_karty_stalego_klienta CHAR(13 CHAR),
    data_urodzenia           DATE,
    panstwo                  VARCHAR2(20 CHAR),
    miasto                   VARCHAR2(30 CHAR),
    kod_pocztowy             VARCHAR2(10 CHAR),
    ulica                    VARCHAR2(40 CHAR),
    nr_domu                  VARCHAR2(5 CHAR),
    nr_mieszkania            VARCHAR2(5 CHAR),
    uwagi                    VARCHAR2(4000 CHAR)
)
LOGGING;

ALTER TABLE osoby
    ADD CONSTRAINT osb_pesel_chk CHECK ( TRIM(translate(pesel, '0123456789', ' ')) IS NULL
                                         AND length(TRIM(pesel)) = 11 );

ALTER TABLE osoby
    ADD CONSTRAINT osb_n_karty_chk CHECK ( TRIM(translate(nr_karty_stalego_klienta, '0123456789', ' ')) IS NULL
                                           AND length(TRIM(nr_karty_stalego_klienta)) = 13 );

COMMENT ON TABLE osoby IS
    'Osoba reprezentuje klienta lub agenta. Agent świadczy usługi dla firmy, a jego praca jest oceniana przez klienta.';

COMMENT ON COLUMN osoby.nr_karty_stalego_klienta IS
    'Składa się z 13 cyfr, aby łatwo można było go zareprezentować w postaci kodu kreskowego EAN-13.';

GRANT DELETE, INSERT, SELECT, UPDATE ON osoby TO bd2c070_app;

ALTER TABLE osoby ADD CONSTRAINT osb_pk PRIMARY KEY ( id_osoby );

ALTER TABLE osoby ADD CONSTRAINT osb_telefon_uk UNIQUE ( telefon );

ALTER TABLE osoby ADD CONSTRAINT osb_email_uk UNIQUE ( email );

ALTER TABLE osoby ADD CONSTRAINT osb_pesel_uk UNIQUE ( pesel );

ALTER TABLE osoby ADD CONSTRAINT osb_n_karty_uk UNIQUE ( nr_karty_stalego_klienta );

CREATE TABLE pytania (
    kod_typu_ankiety VARCHAR2(8 CHAR) NOT NULL,
    nr_pytania       NUMBER(3) NOT NULL,
    tresc            VARCHAR2(1000 CHAR) NOT NULL,
    czy_opcjonalne   NUMBER(1) DEFAULT ON NULL 0 NOT NULL,
    opis             VARCHAR2(1000 CHAR)
)
LOGGING;

ALTER TABLE pytania
    ADD CONSTRAINT pyt_kod_chk CHECK ( upper(kod_typu_ankiety) = kod_typu_ankiety );

ALTER TABLE pytania
    ADD CONSTRAINT pyt_opcjn_chk CHECK ( czy_opcjonalne IN ( 0, 1 ) );

COMMENT ON TABLE pytania IS
    'Pytanie zdefiniowane w danym typie ankiety. ';

COMMENT ON COLUMN pytania.kod_typu_ankiety IS
    'Nie może zawierać małych liter.';

COMMENT ON COLUMN pytania.nr_pytania IS
    'Nr pytania jednocześnie identyfikuje dane pytanie w ramach jednego typu ankiety oraz ustala kolejność tego pytania w ankiecie.';

COMMENT ON COLUMN pytania.tresc IS
    'Treść pytania dostępna dla wypełniającego.';

COMMENT ON COLUMN pytania.czy_opcjonalne IS
    'Przyjmuje wartość 0 dla pytań obowiązkowych, a 1 dla opcjonalnych.';

COMMENT ON COLUMN pytania.opis IS
    'Opis wewnętrzny pytania, niewidoczny dla wypełniającego.';

GRANT DELETE, INSERT, SELECT, UPDATE ON pytania TO bd2c070_app;

ALTER TABLE pytania ADD CONSTRAINT pyt_pk PRIMARY KEY ( kod_typu_ankiety,
                                                        nr_pytania );

CREATE TABLE typy_ankiet (
    kod_typu_ankiety VARCHAR2(8 CHAR) NOT NULL,
    nazwa            VARCHAR2(30 CHAR) NOT NULL,
    opis             VARCHAR2(1000 CHAR)
)
LOGGING;

COMMENT ON TABLE typy_ankiet IS
    'Typ ankiety definiuje szablon ankiety złożony z pytań. Wszystkie ankiety o tym samym typie mają ten sam zestaw pytań.';

GRANT DELETE, INSERT, SELECT, UPDATE ON typy_ankiet TO bd2c070_app;

ALTER TABLE typy_ankiet ADD CONSTRAINT tank_pk PRIMARY KEY ( kod_typu_ankiety );

ALTER TABLE ankiety
    ADD CONSTRAINT ank_agt_fk FOREIGN KEY ( id_agenta )
        REFERENCES osoby ( id_osoby )
    DEFERRABLE;

ALTER TABLE ankiety
    ADD CONSTRAINT ank_kli_fk FOREIGN KEY ( id_klienta )
        REFERENCES osoby ( id_osoby )
    DEFERRABLE;

ALTER TABLE ankiety
    ADD CONSTRAINT ank_tank_fk FOREIGN KEY ( kod_typu_ankiety )
        REFERENCES typy_ankiet ( kod_typu_ankiety )
    DEFERRABLE;

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_ank_fk FOREIGN KEY ( id_ankiety )
        REFERENCES ankiety ( id_ankiety )
            ON DELETE CASCADE
    DEFERRABLE;

ALTER TABLE odpowiedzi
    ADD CONSTRAINT odp_pyt_fk FOREIGN KEY ( kod_typu_ankiety,
                                            nr_pytania )
        REFERENCES pytania ( kod_typu_ankiety,
                             nr_pytania )
    DEFERRABLE;

ALTER TABLE pytania
    ADD CONSTRAINT pyt_tank_fk FOREIGN KEY ( kod_typu_ankiety )
        REFERENCES typy_ankiet ( kod_typu_ankiety )
            ON DELETE CASCADE
    DEFERRABLE;

CREATE OR REPLACE TRIGGER fknto_ankiety BEFORE
    UPDATE OF id_klienta ON ankiety
    FOR EACH ROW
BEGIN
    IF :old.id_klienta IS NOT NULL THEN
        raise_application_error(-20225, 'Non Transferable FK constraint ANK_KLI_FK on table Ankiety is violated');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER fkntm_ankiety BEFORE
    UPDATE OF kod_typu_ankiety, id_agenta ON ankiety
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Ankiety is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_odpowiedzi BEFORE
    UPDATE OF kod_typu_ankiety, nr_pytania, id_ankiety ON odpowiedzi
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Odpowiedzi is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_pytania BEFORE
    UPDATE OF kod_typu_ankiety ON pytania
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Pytania is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             5
-- CREATE INDEX                             4
-- ALTER TABLE                             20
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
